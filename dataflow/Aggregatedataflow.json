{
	"name": "Aggregatedataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MF1_dataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MFCategory_count",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Fund as string,",
				"          {Fund Manager} as string,",
				"          Category as string,",
				"          {2015} as string,",
				"          {2016} as string,",
				"          {2017} as string,",
				"          {2018} as string,",
				"          {2019} as string,",
				"          {2020} as string,",
				"          {2021} as string,",
				"          {2022} as string,",
				"          {2023} as string,",
				"          {2024} as string,",
				"          classification as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 aggregate(groupBy(Category),",
				"     category_wise = count(Fund)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MF category_wise_count.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          {Category Name} = Category,",
				"          {Category Count} = category_wise",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}