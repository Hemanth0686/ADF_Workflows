{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ordersdataset",
						"type": "DatasetReference"
					},
					"name": "orders"
				},
				{
					"dataset": {
						"referenceName": "customersdataset",
						"type": "DatasetReference"
					},
					"name": "customers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "customersoutputdataset",
						"type": "DatasetReference"
					},
					"name": "sinkcustomers"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "joinCustomersOrders"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as string,",
				"          CustomerID as string,",
				"          Product as string,",
				"          Amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> orders",
				"source(output(",
				"          CustomerID as string,",
				"          Name as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customers",
				"joinCustomersOrders select(mapColumn(",
				"          Name,",
				"          Country,",
				"          Product,",
				"          Amount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"customers, orders join(customers@CustomerID == orders@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCustomersOrders",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['customers.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          {customer Name} = Name,",
				"          Country,",
				"          Product,",
				"          Amount",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkcustomers"
			]
		}
	}
}